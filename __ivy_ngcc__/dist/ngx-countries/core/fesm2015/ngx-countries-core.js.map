{"version":3,"file":"ngx-countries-core.js","sources":["ng:/@ngx-countries/core/lib/constants.ts","ng:/@ngx-countries/core/lib/ngx-countries-iso.service.ts","ng:/@ngx-countries/core/lib/ngx-countries.module.ts"],"names":["i18nIsoCountries.getName","i18nIsoCountries.getNames","i18nIsoCountries.alpha2ToAlpha3","i18nIsoCountries.alpha3ToAlpha2","i18nIsoCountries.getAlpha2Code","i18nIsoCountries.getAlpha3Code","i18nIsoCountries.alpha2ToNumeric","i18nIsoCountries.alpha3ToNumeric","i18nIsoCountries.numericToAlpha2","i18nIsoCountries.numericToAlpha3","i18nIsoCountries.getAlpha2Codes","i18nIsoCountries.getAlpha3Codes","i18nIsoCountries.getNumericCodes","i18nIsoCountries.toAlpha3","i18nIsoCountries.toAlpha2","i18nIsoCountries.getSimpleAlpha2Code","i18nIsoCountries.getSimpleAlpha3Code","i18nIsoCountries.langs","i18nIsoCountries.isValid","i18nIsoCountries.registerLocale"],"mappings":"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","sourcesContent":["export const NGX_COUNTRIES_DEFAULT_LOCALE = 'NGX_I18N_COUNTRIES_DEFAULT_LOCALE';\nexport const NGX_COUNTRIES_LOCALES = 'NGX_I18N_COUNTRIES_LOCALES';\n","import { Inject, Injectable } from '@angular/core';\nimport * as i18nIsoCountries from 'i18n-iso-countries';\n\nimport { NGX_COUNTRIES_DEFAULT_LOCALE } from './constants';\n\n@Injectable()\nexport class NgxCountriesIsoService {\n  constructor(\n    @Inject(NGX_COUNTRIES_DEFAULT_LOCALE)\n    public readonly defaultLocale: string\n  ) {}\n\n  // i18n-iso-countries wrappers\n  getName(alpha2orAlpha3orNumeric: string | number, lang?: string): string {\n    if (!lang) {\n      lang = this.defaultLocale;\n    }\n\n    return i18nIsoCountries.getName(alpha2orAlpha3orNumeric, lang);\n  }\n\n  getNames(lang?: string): i18nIsoCountries.LocalizedCountryNames {\n    if (!lang) {\n      lang = this.defaultLocale;\n    }\n    return i18nIsoCountries.getNames(lang);\n  }\n\n  alpha2ToAlpha3(alpha2: string): string {\n    return i18nIsoCountries.alpha2ToAlpha3(alpha2);\n  }\n\n  alpha3ToAlpha2(alpha3: string): string {\n    return i18nIsoCountries.alpha3ToAlpha2(alpha3);\n  }\n\n  getAlpha2Code(name: string, lang?: string): string {\n    if (!lang) {\n      lang = this.defaultLocale;\n    }\n    return i18nIsoCountries.getAlpha2Code(name, lang);\n  }\n\n  getAlpha3Code(name: string, lang?: string): string {\n    if (!lang) {\n      lang = this.defaultLocale;\n    }\n    return i18nIsoCountries.getAlpha3Code(name, lang);\n  }\n\n  alpha2ToNumeric(alpha2: string): string {\n    return i18nIsoCountries.alpha2ToNumeric(alpha2);\n  }\n\n  alpha3ToNumeric(alpha3: string): string {\n    return i18nIsoCountries.alpha3ToNumeric(alpha3);\n  }\n\n  numericToAlpha2(numeric: number | string): string {\n    return i18nIsoCountries.numericToAlpha2(numeric);\n  }\n\n  numericToAlpha3(numeric: number | string): string {\n    return i18nIsoCountries.numericToAlpha3(numeric);\n  }\n\n  getAlpha2Codes(): { [alpha2Key: string]: string } {\n    return i18nIsoCountries.getAlpha2Codes();\n  }\n\n  getAlpha3Codes(): { [alpha3Key: string]: string } {\n    return i18nIsoCountries.getAlpha3Codes();\n  }\n\n  getNumericCodes(): { [numericKey: string]: string } {\n    return i18nIsoCountries.getNumericCodes();\n  }\n\n  toAlpha3(alpha2orNumeric: number | string): string {\n    return i18nIsoCountries.toAlpha3(alpha2orNumeric);\n  }\n\n  toAlpha2(alpha3orNumeric: number | string): string {\n    return i18nIsoCountries.toAlpha2(alpha3orNumeric);\n  }\n\n  getSimpleAlpha2Code(name: string, lang?: string): string {\n    if (!lang) {\n      lang = this.defaultLocale;\n    }\n    return i18nIsoCountries.getSimpleAlpha2Code(name, lang);\n  }\n\n  getSimpleAlpha3Code(name: string, lang?: string): string {\n    if (!lang) {\n      lang = this.defaultLocale;\n    }\n    return i18nIsoCountries.getSimpleAlpha3Code(name, lang);\n  }\n\n  langs(): string[] {\n    return i18nIsoCountries.langs();\n  }\n\n  isValid(alpha2orAlpha3orNumeric: string | number): boolean {\n    return i18nIsoCountries.isValid(alpha2orAlpha3orNumeric);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { NgxCountriesIsoService } from './ngx-countries-iso.service';\nimport { NGX_COUNTRIES_DEFAULT_LOCALE, NGX_COUNTRIES_LOCALES } from './constants';\nimport * as i18nIsoCountries from 'i18n-iso-countries';\n\ndeclare function require(module);\n\nexport interface NgxCountriesOptions {\n  locales?: string[];\n  defaultLocale?: string;\n}\n\nexport function NgxCountriesLocalesFactory(locales: string[], defaultLocale: string) {\n  locales = locales || [defaultLocale];\n\n  if (!locales.includes(defaultLocale)) {\n    locales.push(defaultLocale);\n  }\n  \n  locales.forEach(locale => {\n    i18nIsoCountries.registerLocale(\n      require(`i18n-iso-countries/langs/${locale}.json`)\n    );\n  });\n\n  return new NgxCountriesIsoService(defaultLocale)\n}\n\n@NgModule({\n  providers: [ NgxCountriesIsoService ]\n})\nexport class NgxCountriesModule {\n  static forRoot(options: NgxCountriesOptions = {}): ModuleWithProviders {\n    return {\n      ngModule: NgxCountriesModule,\n      providers: [\n        {\n          provide: NGX_COUNTRIES_DEFAULT_LOCALE,\n          useValue: options.defaultLocale || 'en'\n        },\n        {\n          provide: NGX_COUNTRIES_LOCALES,\n          useValue: options.locales || (options.defaultLocale ? [options.defaultLocale] : ['en'])\n        },\n        {\n          provide: NgxCountriesIsoService,\n          useFactory: NgxCountriesLocalesFactory,\n          deps: [NGX_COUNTRIES_LOCALES, NGX_COUNTRIES_DEFAULT_LOCALE]\n        }\n      ]\n    };\n  }\n}\n"]}